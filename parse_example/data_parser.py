# === –ò–ú–ü–û–†–¢–´ ===
from bs4 import BeautifulSoup
import pandas as pd
import re

# === –ó–∞–≥—Ä—É–∑–∫–∞ HTML ===
with open(r'C:\Users\Mr.Chip\Desktop\DE sea\evangelion.html', 'r', encoding='utf-8') as f:
    html = f.read()

print(f"‚úÖ HTML –∑–∞–≥—Ä—É–∂–µ–Ω: {len(html)} —Å–∏–º–≤–æ–ª–æ–≤\n")

soup = BeautifulSoup(html, "html.parser")

# === –ü–∞—Ä—Å–∏–Ω–≥ —Ç–æ–≤–∞—Ä–æ–≤ ===
products = soup.find_all('li', class_='product')

print(f"–ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(products)}\n")

# –°–ø–∏—Å–æ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
data = []

for i, product in enumerate(products, 1):
    # === 1. ID —Ç–æ–≤–∞—Ä–∞ ===
    product_id = product.get('data-product-id')
    
    if not product_id:
        classes = product.get('class', [])
        for cls in classes:
            if cls.startswith('post-'):
                product_id = cls.replace('post-', '')
                break
    
    # === 2. –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ ===
    title_el = product.find('span', class_='woocommerce-loop-product__title')
    name = title_el.text.strip() if title_el else None
    
    
    
    # === 3. –¶–µ–Ω–∞ ===
    price_el = product.find('span', class_='price')
    price = price_el.text.strip() if price_el else None
    
    # === 4. –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä ===
    link_el = product.find('a', class_='woocommerce-LoopProduct-link')
    product_url = link_el['href'] if link_el and link_el.has_attr('href') else None
    
    # === 5. –ö–∞—Ä—Ç–∏–Ω–∫–∞ —Ç–æ–≤–∞—Ä–∞ ===
    img_el = product.find('img')
    img_url = None
    
    if img_el:
        
        # –ò–∑ data-src
        if not img_url:
            img_url = img_el.get('data-src')
        
        # –î–µ–ª–∞–µ–º URL –∞–±—Å–æ–ª—é—Ç–Ω—ã–º
        if img_url and not img_url.startswith('http'):
            img_url = 'https://nikifilini.com' + img_url
    
    # === 6. –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–∞ ===
    classes = product.get('class', [])
    categories = [c for c in classes if c.startswith('product_cat-')]
    category = ', '.join([c.replace('product_cat-', '') for c in categories]) if categories else None
    
    # === 7. –¢–µ–≥–∏ —Ç–æ–≤–∞—Ä–∞ (—Ü–≤–µ—Ç–∞) ===
    tags = [c for c in classes if c.startswith('product_tag-')]
    tag = ', '.join([c.replace('product_tag-', '') for c in tags]) if tags else None
    
    # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Å–ø–∏—Å–æ–∫
    data.append({
        'id': product_id,
        'name': name,
        'price': price,
        'product_url': product_url,
        'img_url': img_url,
        'category': category,
        'tags': tag
    })

# === –°–æ–∑–¥–∞–Ω–∏–µ DataFrame ===
df = pd.DataFrame(data)

print(f"‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à—ë–Ω!")
print(f"–°–æ–±—Ä–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(df)}\n")

# === –í—ã–≤–æ–¥ —Ç–∞–±–ª–∏—Ü—ã ===
print("–ü–µ—Ä–≤—ã–µ 5 —Ç–æ–≤–∞—Ä–æ–≤:\n")
print(df.head())

# === –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ CSV ===
output_file = r'C:\Users\Mr.Chip\Desktop\DE sea\evangelion_products.csv'

try:
    df.to_csv(output_file, index=False, encoding='utf-8-sig')
    print(f"\n‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: {output_file}")
except PermissionError:
    output_file = r'C:\Users\Mr.Chip\Desktop\DE sea\evangelion_products_new.csv'
    df.to_csv(output_file, index=False, encoding='utf-8-sig')
    print(f"\n‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: {output_file}")

# === –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ ===
print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
print(f"–í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(df)}")
print(f"–¢–æ–≤–∞—Ä–æ–≤ —Å ID: {df['id'].notna().sum()}")
print(f"–¢–æ–≤–∞—Ä–æ–≤ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º: {df['name'].notna().sum()}")
print(f"–¢–æ–≤–∞—Ä–æ–≤ —Å —Ü–µ–Ω–æ–π: {df['price'].notna().sum()}")
print(f"–¢–æ–≤–∞—Ä–æ–≤ —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π: {df['img_url'].notna().sum()}")

# === –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–Ω—É—é —Ç–∞–±–ª–∏—Ü—É ===
pd.set_option('display.max_rows', None)
pd.set_option('display.max_columns', None)
pd.set_option('display.width', None)
pd.set_option('display.max_colwidth', 50)

print("\nüì¶ –ü–æ–ª–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Ç–æ–≤–∞—Ä–æ–≤:\n")
df